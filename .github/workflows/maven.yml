# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile
  security-check:
    runs-on: ubuntu-latest
    needs: compile
    steps:
    - uses: actions/checkout@v4
    - name: Generate Trivy Vulnerability Report
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: "fs"
        output: trivy-report.json
        format: json
        scan-ref: .
        exit-code: 0
    - name: Upload Vulnerability Scan Results
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-report.json
        retention-days: 30
  test:
    runs-on: ubuntu-latest
    needs: security-check
    steps:
    - uses: actions/checkout@v4
    - name: Maven Test Case
      run: mvn test
  build_scan:
    environment: dev
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: build the code
      run: mvn package
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.3.1
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: target/*.jar
  build_docker_push:
    environment: dev
    runs-on: ubuntu-latest
    needs: build_scan
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v5
      with:
        name: app
        path: app
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:latest
        context: .
        file: ./Dockerfile
    - name: Run Trivy vulnerability scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ vars.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
      
      

